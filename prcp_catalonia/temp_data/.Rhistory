colorkey=list(
space='bottom',
labels=list(at=cut[-2],cex=0.7),
axis.line=list(col='black'),
width=0.75
),
par.settings=list(
strip.border=list(col='transparent'),
strip.background=list(col='transparent'),
axis.line=list(col='transparent')
),
scales=list(color="black", draw=TRUE, alternating=c(3), cex=0.5, abbreviate=T, minlength=2, rot=45),
col.regions=pal,
at=cut,
names.attr=rep('', nlayers(s)),
xlab.top=list(as.character(time), cex=0.7), xlab=NULL,
ylab=list(rev(met2), cex=0.7),
layout=c(4, 4)) +
layer(sp.points(stfdf@sp, pch=3, col="black", cex=0.1, alpha=0.5)) +
layer(sp.polygons(border, lwd=0.1)) +
layer({
SpatialPolygonsRescale(layout.north.arrow(type = 2),
offset = c(2.5,40.5),
scale = 1)
}, packets = 4) +
layer({
grid.text(x= 2.2, y=40.9, "N", gp=gpar(cex=0.8), rot=0,
default.units='native')
}, packets = 4)+
layer({
xs <- seq(1.5, 3.2, by=0.85)
grid.rect(x=xs[-3], y=40.9,
width=0.85, height=0.07,
gp=gpar(fill=c('black', 'transparent')),
default.units='native')
grid.text(x= xs - 0.4, y=40.7, c(0, 75, "150km"),# seq(0, 150, by=75),
gp=gpar(cex=0.5), rot=0,
default.units='native')
}, packets = 16)
dev.off()
# tiff("../plot/iqr.tiff", width = 100, height = 130, units = 'mm', res = 600, compression = "lzw")
jpeg("../plot/iqr.jpeg", width = 100, height = 130, units = 'mm', res = 600)
levelplot(s,
margin=FALSE,
colorkey=list(
space='bottom',
labels=list(at=cut[-2],cex=0.7),
axis.line=list(col='black'),
width=0.75
),
par.settings=list(
strip.border=list(col='transparent'),
strip.background=list(col='transparent'),
axis.line=list(col='transparent')
),
scales=list(color="black", draw=TRUE, alternating=c(3), cex=0.5, abbreviate=T, minlength=2, rot=45),
col.regions=pal,
at=cut,
names.attr=rep('', nlayers(s)),
xlab.top=list(as.character(time), cex=0.7), xlab=NULL,
ylab=list(rev(met2), cex=0.7),
layout=c(4, 4)) +
layer(sp.points(stfdf@sp, pch=3, col="black", cex=0.1, alpha=0.5)) +
layer(sp.polygons(border, lwd=0.1)) +
layer({
SpatialPolygonsRescale(layout.north.arrow(type = 2),
offset = c(2.5,40.5),
scale = 1)
}, packets = 4) +
layer({
grid.text(x= 2.2, y=40.9, "N", gp=gpar(cex=0.8), rot=0,
default.units='native')
}, packets = 4)+
layer({
xs <- seq(1.4, 3.1, by=0.85)
grid.rect(x=xs[-3], y=40.9,
width=0.85, height=0.07,
gp=gpar(fill=c('black', 'transparent')),
default.units='native')
grid.text(x= xs - 0.4, y=40.7, c(0, 75, "150km"),# seq(0, 150, by=75),
gp=gpar(cex=0.5), rot=0,
default.units='native')
}, packets = 16)
dev.off()
# tiff("../plot/iqr.tiff", width = 100, height = 130, units = 'mm', res = 600, compression = "lzw")
jpeg("../plot/iqr.jpeg", width = 100, height = 130, units = 'mm', res = 600)
levelplot(s,
margin=FALSE,
colorkey=list(
space='bottom',
labels=list(at=cut[-2],cex=0.7),
axis.line=list(col='black'),
width=0.75
),
par.settings=list(
strip.border=list(col='transparent'),
strip.background=list(col='transparent'),
axis.line=list(col='transparent')
),
scales=list(color="black", draw=TRUE, alternating=c(3), cex=0.5, abbreviate=T, minlength=2, rot=45),
col.regions=pal,
at=cut,
names.attr=rep('', nlayers(s)),
xlab.top=list(as.character(time), cex=0.7), xlab=NULL,
ylab=list(rev(met2), cex=0.7),
layout=c(4, 4)) +
layer(sp.points(stfdf@sp, pch=3, col="black", cex=0.1, alpha=0.5)) +
layer(sp.polygons(border, lwd=0.1)) +
layer({
SpatialPolygonsRescale(layout.north.arrow(type = 2),
offset = c(2.5,40.5),
scale = 1)
}, packets = 4) +
layer({
grid.text(x= 2.2, y=40.9, "N", gp=gpar(cex=0.8), rot=0,
default.units='native')
}, packets = 4)+
layer({
xs <- seq(1.45, 3.15, by=0.85)
grid.rect(x=xs[-3], y=40.9,
width=0.85, height=0.07,
gp=gpar(fill=c('black', 'transparent')),
default.units='native')
grid.text(x= xs - 0.4, y=40.7, c(0, 75, "150km"),# seq(0, 150, by=75),
gp=gpar(cex=0.5), rot=0,
default.units='native')
}, packets = 16)
dev.off()
tiff("../plot/iqr.tiff", width = 100, height = 130, units = 'mm', res = 600, compression = "lzw")
levelplot(s,
margin=FALSE,
colorkey=list(
space='bottom',
labels=list(at=cut[-2],cex=0.7),
axis.line=list(col='black'),
width=0.75
),
par.settings=list(
strip.border=list(col='transparent'),
strip.background=list(col='transparent'),
axis.line=list(col='transparent')
),
scales=list(color="black", draw=TRUE, alternating=c(3), cex=0.5, abbreviate=T, minlength=2, rot=45),
col.regions=pal,
at=cut,
names.attr=rep('', nlayers(s)),
xlab.top=list(as.character(time), cex=0.7), xlab=NULL,
ylab=list(rev(met2), cex=0.7),
layout=c(4, 4)) +
layer(sp.points(stfdf@sp, pch=3, col="black", cex=0.1, alpha=0.5)) +
layer(sp.polygons(border, lwd=0.1)) +
layer({
SpatialPolygonsRescale(layout.north.arrow(type = 2),
offset = c(2.5,40.5),
scale = 1)
}, packets = 4) +
layer({
grid.text(x= 2.2, y=40.9, "N", gp=gpar(cex=0.8), rot=0,
default.units='native')
}, packets = 4)+
layer({
xs <- seq(1.45, 3.15, by=0.85)
grid.rect(x=xs[-3], y=40.9,
width=0.85, height=0.07,
gp=gpar(fill=c('black', 'transparent')),
default.units='native')
grid.text(x= xs - 0.4, y=40.7, c(0, 75, "150km"),# seq(0, 150, by=75),
gp=gpar(cex=0.5), rot=0,
default.units='native')
}, packets = 16)
dev.off()
load('stfdf_temp.rda')
stfdf <- stfdf[!is.na(stfdf[, 1]$prcp), ]
summary(stfdf[ , time[1], "prcp"])
summary(stfdf[ , time[2], "prcp"])
summary(stfdf[ , time[3], "prcp"])
summary(stfdf[ , time[4], "prcp"])
met <- c("strk", "rf", "rfsi", "rfsp")
pred <- raster(paste("../predictions/", met[1], "/",
days[1], ".tif", sep = "")) / 100
pred <- as(pred, "SpatialPixelsDataFrame")
names(pred) <- paste(met[1], 1, sep = "")
for (t in 1:length(time)){
for (m in 1:length(met)){
r <- raster(paste("../predictions/", met[m], "/",
days[t], ".tif", sep = "")) / 100
r <- as(r, "SpatialPixelsDataFrame")
names(r) <- met[m]
pred[[paste(met[m], t, sep = "")]] <- r[[met[m]]]
}
}
for (t in 1:length(time)){
for (m in 1:length(met)){
assign(paste(met[m], t, sep = ""), raster(paste("../predictions/", met[m], "/",
days[t], ".tif", sep = "")) / 100)
}
}
max(pred@data)
max(pred@data$rf4)
max(pred@data$rfsp4)
max(pred@data$rfsi4)
max(pred@data$strk4)
min(pred@data)
pal <- colorRampPalette(brewer.pal(9, "Blues"))
cut <- c(floor(min(pred@data)), 0.5, 1, 1.5, 2, 3, 4, 6, 8, 15, ceiling(max(pred@data)))
cut2 <- cut
s <- stack(strk1, strk2, strk3, strk4,
rf1, rf2, rf3, rf4,
rfsi1, rfsi2, rfsi3, rfsi4,
rfsp1, rfsp2, rfsp3, rfsp4)
met2 <- c("STRK", "RF", "RFSI", "RFsp")
time_max <- c()
for (i in 1:4){
time_max <- c(time_max, paste("max: ", max(stfdf[ , time[i]]$prcp), " mm\n", sep = ""))
}
# tiff("../plot/predictions.tiff", width = 100, height = 130, units = 'mm', res = 600, compression = "lzw")
jpeg("../plot/predictions.jpeg", width = 100, height = 130, units = 'mm', res = 600)
levelplot(s,
margin=FALSE,
colorkey=list(
space='bottom',
labels=list(at=cut2,cex=0.7),
axis.line=list(col='black'),
width=0.75
),
par.settings=list(
strip.border=list(col='transparent'),
strip.background=list(col='transparent'),
axis.line=list(col='transparent')
),
scales=list(color="black", draw=TRUE, alternating=c(3), cex=0.5, abbreviate=T, minlength=2, rot=45),
col.regions=pal,
at=cut,
names.attr=rep('', nlayers(s)),
xlab.top=list(as.character(time), cex=0.7), xlab=list(as.character(time_max), cex=0.7),
ylab=list(rev(met2), cex=0.7),
layout=c(4, 4),
as.table = TRUE) +
layer(sp.points(stfdf@sp, pch=3, col="black", cex=0.1, alpha=0.5)) +
layer(sp.polygons(border, lwd=0.1)) +
layer({
SpatialPolygonsRescale(layout.north.arrow(type = 2),
offset = c(2.5,40.5),
scale = 1)
}, packets = 4) +
layer({
grid.text(x= 2.2, y=40.9, "N", gp=gpar(cex=0.8), rot=0,
default.units='native')
}, packets = 4)+
layer({
xs <- seq(1.45, 3.15, by=0.85)
grid.rect(x=xs[-3], y=40.9,
width=0.85, height=0.07,
gp=gpar(fill=c('black', 'transparent')),
default.units='native')
grid.text(x= xs - 0.4, y=40.7, c(0, 75, "150km"),# seq(0, 150, by=75),
gp=gpar(cex=0.5), rot=0,
default.units='native')
}, packets = 16)
dev.off()
tiff("../plot/predictions.tiff", width = 100, height = 130, units = 'mm', res = 600, compression = "lzw")
levelplot(s,
margin=FALSE,
colorkey=list(
space='bottom',
labels=list(at=cut2,cex=0.7),
axis.line=list(col='black'),
width=0.75
),
par.settings=list(
strip.border=list(col='transparent'),
strip.background=list(col='transparent'),
axis.line=list(col='transparent')
),
scales=list(color="black", draw=TRUE, alternating=c(3), cex=0.5, abbreviate=T, minlength=2, rot=45),
col.regions=pal,
at=cut,
names.attr=rep('', nlayers(s)),
xlab.top=list(as.character(time), cex=0.7), xlab=list(as.character(time_max), cex=0.7),
ylab=list(rev(met2), cex=0.7),
layout=c(4, 4),
as.table = TRUE) +
layer(sp.points(stfdf@sp, pch=3, col="black", cex=0.1, alpha=0.5)) +
layer(sp.polygons(border, lwd=0.1)) +
layer({
SpatialPolygonsRescale(layout.north.arrow(type = 2),
offset = c(2.5,40.5),
scale = 1)
}, packets = 4) +
layer({
grid.text(x= 2.2, y=40.9, "N", gp=gpar(cex=0.8), rot=0,
default.units='native')
}, packets = 4)+
layer({
xs <- seq(1.45, 3.15, by=0.85)
grid.rect(x=xs[-3], y=40.9,
width=0.85, height=0.07,
gp=gpar(fill=c('black', 'transparent')),
default.units='native')
grid.text(x= xs - 0.4, y=40.7, c(0, 75, "150km"),# seq(0, 150, by=75),
gp=gpar(cex=0.5), rot=0,
default.units='native')
}, packets = 16)
dev.off()
?xlab.top
# tiff("../plot/predictions.tiff", width = 100, height = 130, units = 'mm', res = 600, compression = "lzw")
jpeg("../plot/predictions.jpeg", width = 100, height = 130, units = 'mm', res = 600)
levelplot(s,
margin=FALSE,
colorkey=list(
space='bottom',
labels=list(at=cut2,cex=0.7),
axis.line=list(col='black'),
width=0.75
),
par.settings=list(
strip.border=list(col='transparent'),
strip.background=list(col='transparent'),
axis.line=list(col='transparent')
),
scales=list(color="black", draw=TRUE, alternating=c(3), cex=0.5, abbreviate=T, minlength=2, rot=45),
col.regions=pal,
at=cut,
names.attr=rep('', nlayers(s)),
xlab.top=list(as.character(time), cex=0.7, fontface='bold'), xlab=list(as.character(time_max), cex=0.7),
ylab=list(rev(met2), cex=0.7, fontface='bold'),
layout=c(4, 4),
as.table = TRUE) +
layer(sp.points(stfdf@sp, pch=3, col="black", cex=0.1, alpha=0.5)) +
layer(sp.polygons(border, lwd=0.1)) +
layer({
SpatialPolygonsRescale(layout.north.arrow(type = 2),
offset = c(2.5,40.5),
scale = 1)
}, packets = 4) +
layer({
grid.text(x= 2.2, y=40.9, "N", gp=gpar(cex=0.8), rot=0,
default.units='native')
}, packets = 4)+
layer({
xs <- seq(1.45, 3.15, by=0.85)
grid.rect(x=xs[-3], y=40.9,
width=0.85, height=0.07,
gp=gpar(fill=c('black', 'transparent')),
default.units='native')
grid.text(x= xs - 0.4, y=40.7, c(0, 75, "150km"),# seq(0, 150, by=75),
gp=gpar(cex=0.5), rot=0,
default.units='native')
}, packets = 16)
dev.off()
tiff("../plot/predictions.tiff", width = 100, height = 130, units = 'mm', res = 600, compression = "lzw")
levelplot(s,
margin=FALSE,
colorkey=list(
space='bottom',
labels=list(at=cut2,cex=0.7),
axis.line=list(col='black'),
width=0.75
),
par.settings=list(
strip.border=list(col='transparent'),
strip.background=list(col='transparent'),
axis.line=list(col='transparent')
),
scales=list(color="black", draw=TRUE, alternating=c(3), cex=0.5, abbreviate=T, minlength=2, rot=45),
col.regions=pal,
at=cut,
names.attr=rep('', nlayers(s)),
xlab.top=list(as.character(time), cex=0.7, fontface='bold'), xlab=list(as.character(time_max), cex=0.7),
ylab=list(rev(met2), cex=0.7, fontface='bold'),
layout=c(4, 4),
as.table = TRUE) +
layer(sp.points(stfdf@sp, pch=3, col="black", cex=0.1, alpha=0.5)) +
layer(sp.polygons(border, lwd=0.1)) +
layer({
SpatialPolygonsRescale(layout.north.arrow(type = 2),
offset = c(2.5,40.5),
scale = 1)
}, packets = 4) +
layer({
grid.text(x= 2.2, y=40.9, "N", gp=gpar(cex=0.8), rot=0,
default.units='native')
}, packets = 4)+
layer({
xs <- seq(1.45, 3.15, by=0.85)
grid.rect(x=xs[-3], y=40.9,
width=0.85, height=0.07,
gp=gpar(fill=c('black', 'transparent')),
default.units='native')
grid.text(x= xs - 0.4, y=40.7, c(0, 75, "150km"),# seq(0, 150, by=75),
gp=gpar(cex=0.5), rot=0,
default.units='native')
}, packets = 16)
dev.off()
load('stfdf_temp.rda')
stfdf <- stfdf[!is.na(stfdf[, 1]$prcp), ]
met <- c("strk", "rf", "rfsi", "rfsp")
pred <- raster(paste("../predictions/", met[1], "/",
days[1], "_iqr.tif", sep = "")) / 100
pred <- as(pred, "SpatialPixelsDataFrame")
names(pred) <- paste(met[1], 1, sep = "")
for (t in 1:length(time)){
for (m in 1:length(met)){
r <- raster(paste("../predictions/", met[m], "/",
days[t], "_iqr.tif", sep = "")) / 100
r <- as(r, "SpatialPixelsDataFrame")
names(r) <- met[m]
pred[[paste(met[m], t, sep = "")]] <- r[[met[m]]]
}
}
for (t in 1:length(time)){
for (m in 1:length(met)){
assign(paste(met[m], t, sep = ""), raster(paste("../predictions/", met[m], "/",
days[t], "_iqr.tif", sep = "")) / 100)
}
}
max(pred@data)
min(pred@data)
pal <- colorRampPalette(brewer.pal(9, "YlOrRd")[1:9])
cut <- c(0, 0.5, 1, 2, 3, 4, 5, 6, 7, 14, ceiling(max(pred@data)))
s <- stack(strk1, strk2, strk3, strk4,
rf1, rf2, rf3, rf4,
rfsi1, rfsi2, rfsi3, rfsi4,
rfsp1, rfsp2, rfsp3, rfsp4)
met2 <- c("STRK", "RF", "RFSI", "RFsp")
# tiff("../plot/iqr.tiff", width = 100, height = 130, units = 'mm', res = 600, compression = "lzw")
jpeg("../plot/iqr.jpeg", width = 100, height = 130, units = 'mm', res = 600)
levelplot(s,
margin=FALSE,
colorkey=list(
space='bottom',
labels=list(at=cut[-2],cex=0.7),
axis.line=list(col='black'),
width=0.75
),
par.settings=list(
strip.border=list(col='transparent'),
strip.background=list(col='transparent'),
axis.line=list(col='transparent')
),
scales=list(color="black", draw=TRUE, alternating=c(3), cex=0.5, abbreviate=T, minlength=2, rot=45),
col.regions=pal,
at=cut,
names.attr=rep('', nlayers(s)),
xlab.top=list(as.character(time), cex=0.7, fontface='bold'), xlab=NULL,
ylab=list(rev(met2), cex=0.7, fontface='bold'),
layout=c(4, 4)) +
layer(sp.points(stfdf@sp, pch=3, col="black", cex=0.1, alpha=0.5)) +
layer(sp.polygons(border, lwd=0.1)) +
layer({
SpatialPolygonsRescale(layout.north.arrow(type = 2),
offset = c(2.5,40.5),
scale = 1)
}, packets = 4) +
layer({
grid.text(x= 2.2, y=40.9, "N", gp=gpar(cex=0.8), rot=0,
default.units='native')
}, packets = 4)+
layer({
xs <- seq(1.45, 3.15, by=0.85)
grid.rect(x=xs[-3], y=40.9,
width=0.85, height=0.07,
gp=gpar(fill=c('black', 'transparent')),
default.units='native')
grid.text(x= xs - 0.4, y=40.7, c(0, 75, "150km"),# seq(0, 150, by=75),
gp=gpar(cex=0.5), rot=0,
default.units='native')
}, packets = 16)
dev.off()
tiff("../plot/iqr.tiff", width = 100, height = 130, units = 'mm', res = 600, compression = "lzw")
levelplot(s,
margin=FALSE,
colorkey=list(
space='bottom',
labels=list(at=cut[-2],cex=0.7),
axis.line=list(col='black'),
width=0.75
),
par.settings=list(
strip.border=list(col='transparent'),
strip.background=list(col='transparent'),
axis.line=list(col='transparent')
),
scales=list(color="black", draw=TRUE, alternating=c(3), cex=0.5, abbreviate=T, minlength=2, rot=45),
col.regions=pal,
at=cut,
names.attr=rep('', nlayers(s)),
xlab.top=list(as.character(time), cex=0.7, fontface='bold'), xlab=NULL,
ylab=list(rev(met2), cex=0.7, fontface='bold'),
layout=c(4, 4)) +
layer(sp.points(stfdf@sp, pch=3, col="black", cex=0.1, alpha=0.5)) +
layer(sp.polygons(border, lwd=0.1)) +
layer({
SpatialPolygonsRescale(layout.north.arrow(type = 2),
offset = c(2.5,40.5),
scale = 1)
}, packets = 4) +
layer({
grid.text(x= 2.2, y=40.9, "N", gp=gpar(cex=0.8), rot=0,
default.units='native')
}, packets = 4)+
layer({
xs <- seq(1.45, 3.15, by=0.85)
grid.rect(x=xs[-3], y=40.9,
width=0.85, height=0.07,
gp=gpar(fill=c('black', 'transparent')),
default.units='native')
grid.text(x= xs - 0.4, y=40.7, c(0, 75, "150km"),# seq(0, 150, by=75),
gp=gpar(cex=0.5), rot=0,
default.units='native')
}, packets = 16)
dev.off()
